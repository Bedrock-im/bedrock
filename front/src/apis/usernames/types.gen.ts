// This file is auto-generated by @hey-api/openapi-ts

export type AddCreditsRequest = {
    address: string;
    amount: number;
};

export type BodyChangeAvatarUsernameUsernameAvatarPost = {
    file: Blob | File;
};

export type CheckUsernameAvailableResponse = {
    username: string;
    available: boolean;
};

export type GetAddressResponse = {
    address: string;
};

export type GetUsernameResponse = {
    username: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type RegisterRequest = {
    username: string;
    address: string;
};

export type ThirdwebWebhookPayload = {
    data: {
        [key: string]: unknown;
    };
};

export type TransactionResponse = {
    tx_hash: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type ThirdwebWebhookRouteThirdwebWebhookPostData = {
    body: ThirdwebWebhookPayload;
    headers?: {
        'X-Pay-Signature'?: string;
        'X-Pay-Timestamp'?: string;
    };
    path?: never;
    query?: never;
    url: '/thirdweb/webhook';
};

export type ThirdwebWebhookRouteThirdwebWebhookPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ThirdwebWebhookRouteThirdwebWebhookPostError = ThirdwebWebhookRouteThirdwebWebhookPostErrors[keyof ThirdwebWebhookRouteThirdwebWebhookPostErrors];

export type ThirdwebWebhookRouteThirdwebWebhookPostResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type ThirdwebWebhookRouteThirdwebWebhookPostResponse = ThirdwebWebhookRouteThirdwebWebhookPostResponses[keyof ThirdwebWebhookRouteThirdwebWebhookPostResponses];

export type GetCreditsRouteCreditsAddressGetData = {
    body?: never;
    path: {
        address: string;
    };
    query?: never;
    url: '/credits/{address}';
};

export type GetCreditsRouteCreditsAddressGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCreditsRouteCreditsAddressGetError = GetCreditsRouteCreditsAddressGetErrors[keyof GetCreditsRouteCreditsAddressGetErrors];

export type GetCreditsRouteCreditsAddressGetResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GetCreditsRouteCreditsAddressGetResponse = GetCreditsRouteCreditsAddressGetResponses[keyof GetCreditsRouteCreditsAddressGetResponses];

export type AddCreditsRouteCreditsAddPostData = {
    body: AddCreditsRequest;
    path?: never;
    query?: never;
    url: '/credits/add';
};

export type AddCreditsRouteCreditsAddPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddCreditsRouteCreditsAddPostError = AddCreditsRouteCreditsAddPostErrors[keyof AddCreditsRouteCreditsAddPostErrors];

export type AddCreditsRouteCreditsAddPostResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type AddCreditsRouteCreditsAddPostResponse = AddCreditsRouteCreditsAddPostResponses[keyof AddCreditsRouteCreditsAddPostResponses];

export type RegisterUsernameRegisterPostData = {
    body: RegisterRequest;
    path?: never;
    query?: never;
    url: '/register';
};

export type RegisterUsernameRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterUsernameRegisterPostError = RegisterUsernameRegisterPostErrors[keyof RegisterUsernameRegisterPostErrors];

export type RegisterUsernameRegisterPostResponses = {
    /**
     * Successful Response
     */
    200: TransactionResponse;
};

export type RegisterUsernameRegisterPostResponse = RegisterUsernameRegisterPostResponses[keyof RegisterUsernameRegisterPostResponses];

export type CheckUsernameAvailableAvailableGetData = {
    body?: never;
    path?: never;
    query: {
        username: string;
    };
    url: '/available';
};

export type CheckUsernameAvailableAvailableGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CheckUsernameAvailableAvailableGetError = CheckUsernameAvailableAvailableGetErrors[keyof CheckUsernameAvailableAvailableGetErrors];

export type CheckUsernameAvailableAvailableGetResponses = {
    /**
     * Successful Response
     */
    200: CheckUsernameAvailableResponse;
};

export type CheckUsernameAvailableAvailableGetResponse = CheckUsernameAvailableAvailableGetResponses[keyof CheckUsernameAvailableAvailableGetResponses];

export type GetUsernameAddressGetData = {
    body?: never;
    path: {
        address: string;
    };
    query?: never;
    url: '/{address}';
};

export type GetUsernameAddressGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUsernameAddressGetError = GetUsernameAddressGetErrors[keyof GetUsernameAddressGetErrors];

export type GetUsernameAddressGetResponses = {
    /**
     * Successful Response
     */
    200: GetUsernameResponse;
};

export type GetUsernameAddressGetResponse = GetUsernameAddressGetResponses[keyof GetUsernameAddressGetResponses];

export type GetAddressUsernameUsernameAddressGetData = {
    body?: never;
    path: {
        username: string;
    };
    query?: never;
    url: '/username/{username}/address';
};

export type GetAddressUsernameUsernameAddressGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAddressUsernameUsernameAddressGetError = GetAddressUsernameUsernameAddressGetErrors[keyof GetAddressUsernameUsernameAddressGetErrors];

export type GetAddressUsernameUsernameAddressGetResponses = {
    /**
     * Successful Response
     */
    200: GetAddressResponse;
};

export type GetAddressUsernameUsernameAddressGetResponse = GetAddressUsernameUsernameAddressGetResponses[keyof GetAddressUsernameUsernameAddressGetResponses];

export type GetAvatarUsernameUsernameAvatarGetData = {
    body?: never;
    path: {
        username: string;
    };
    query?: never;
    url: '/username/{username}/avatar';
};

export type GetAvatarUsernameUsernameAvatarGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAvatarUsernameUsernameAvatarGetError = GetAvatarUsernameUsernameAvatarGetErrors[keyof GetAvatarUsernameUsernameAvatarGetErrors];

export type GetAvatarUsernameUsernameAvatarGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type GetAvatarUsernameUsernameAvatarGetResponse = GetAvatarUsernameUsernameAvatarGetResponses[keyof GetAvatarUsernameUsernameAvatarGetResponses];

export type ChangeAvatarUsernameUsernameAvatarPostData = {
    body: BodyChangeAvatarUsernameUsernameAvatarPost;
    path: {
        username: string;
    };
    query?: never;
    url: '/username/{username}/avatar';
};

export type ChangeAvatarUsernameUsernameAvatarPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeAvatarUsernameUsernameAvatarPostError = ChangeAvatarUsernameUsernameAvatarPostErrors[keyof ChangeAvatarUsernameUsernameAvatarPostErrors];

export type ChangeAvatarUsernameUsernameAvatarPostResponses = {
    /**
     * Successful Response
     */
    200: TransactionResponse;
};

export type ChangeAvatarUsernameUsernameAvatarPostResponse = ChangeAvatarUsernameUsernameAvatarPostResponses[keyof ChangeAvatarUsernameUsernameAvatarPostResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:8000' | (string & {});
};